<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Element UI 实现上传一张图片后隐藏上传按钮功能</title>
    <link href="/2021/08/01/Element%20UI%20%E5%AE%9E%E7%8E%B0%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87%E5%90%8E%E9%9A%90%E8%97%8F%E4%B8%8A%E4%BC%A0%E6%8C%89%E9%92%AE%E5%8A%9F%E8%83%BD/"/>
    <url>/2021/08/01/Element%20UI%20%E5%AE%9E%E7%8E%B0%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87%E5%90%8E%E9%9A%90%E8%97%8F%E4%B8%8A%E4%BC%A0%E6%8C%89%E9%92%AE%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p><a href="https://blog.csdn.net/MYuanFang/article/details/106059423">Element UI 实现上传单个图片功能</a></p><p><a href="https://cn.vuejs.org/v2/guide/class-and-style.html">Class 与 Style 绑定</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;h2 style=&quot;margin-bottom:10px&quot;&gt;上传单个图片&lt;/h2&gt;<br>    &lt;el-upload<br>        class=&quot;avatar-uploader&quot;<br>        action=&quot;https://jsonplaceholder.typicode.com/posts/&quot;<br>        list-type=&quot;picture-card&quot;<br>        :on-preview=&quot;handlePictureCardPreview&quot;<br>        :on-remove=&quot;handleRemove&quot;<br>        :http-request=&quot;httpRequest&quot;<br>        :class=&quot;&#123;&#x27;demo-httpRequestImg&#x27;:httpRequestImg&#125;&quot; &lt;!--绑定一个占位class--&gt;<br>        &gt;<br>        &lt;i class=&quot;el-icon-plus&quot;&gt;&lt;/i&gt;<br>    &lt;/el-upload&gt;<br>    &lt;el-dialog :visible.sync=&quot;dialogVisibleImg&quot; append-to-body class=&quot;ImgClass&quot;&gt;<br>        &lt;img width=&quot;100%&quot; :src=&quot;dialogImageUrl&quot; alt=&quot;&quot;&gt;<br>    &lt;/el-dialog&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br> <br>&lt;script&gt;<br>export default &#123;<br>  data()&#123;<br>    return&#123;<br>      dialogImageUrl: &#x27;&#x27;,//预览url<br>      dialogVisibleImg:false,<br>      httpRequestImg:false, // 展示upload图片<br>    &#125;<br>  &#125;,<br>  methods:&#123;<br>    httpRequest(a) &#123; //上传成功<br>      // 正常情况下会出现第二个图片框 true =&gt; display: none;<br>      this.httpRequestImg = true;<br>    &#125;,<br>    handlePictureCardPreview(file) &#123; //预览<br>      this.dialogImageUrl = file.url;<br>      this.dialogVisibleImg = true;<br>    &#125;,<br>    handleRemove(file, fileList) &#123; //删除<br>      this.httpRequestImg = false; // 展示upload图片<br>      console.log(file, fileList);<br>    &#125;,<br>  &#125;<br>&#125;<br>&lt;/script&gt;<br> <br>&lt;style lang=&quot;less&quot; scoped&gt;<br>  .demo-httpRequestImg&#123;<br>    /deep/ .el-upload--picture-card&#123;<br>        display: none; // 重点在style里<br>    &#125;<br>  &#125; <br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/20210801020753.png" alt="改造前"></p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/20210801023451.png" alt="改造后" style="zoom:80%;" />]]></content>
    
    
    <categories>
      
      <category>Vue.js &amp; Element UI</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>解决：URL访问不到FastDFS图片</title>
    <link href="/2021/07/30/URL%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%88%B0FastDFS%E5%9B%BE%E7%89%87/"/>
    <url>/2021/07/30/URL%E8%AE%BF%E9%97%AE%E4%B8%8D%E5%88%B0FastDFS%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>在Linux系统中安装好Nginx和FastDFS</p><p>教程：<a href="https://blog.csdn.net/lovely__rr/article/details/109569124?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.pc_relevant_baidujshouduan&spm=1001.2101.3001.4242">整合FastDFS与Nginx 使生成的文件URL能够通过浏览器访问</a></p><h3 id="出错原因"><a href="#出错原因" class="headerlink" title="出错原因"></a>出错原因</h3><p>server中server_name和location没配好，原因是以前配过Nginx集群，修改时没注意细节</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/20210730234436.png" alt="网图 用来说明"></p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210730235223839.png"></p><h3 id="解决成功"><a href="#解决成功" class="headerlink" title="解决成功"></a>解决成功</h3><p>下图是调整好的</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/20210730231613.png"></p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/20210730234833.png"></p>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode TOP 145：5 longest-palindromic-substring</title>
    <link href="/2021/07/24/5%20longest-palindromic-substring/"/>
    <url>/2021/07/24/5%20longest-palindromic-substring/</url>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">5. 最长回文子串 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">longestPalindrome</span><span class="hljs-params">(String s)</span> </span>&#123;<br>        <span class="hljs-comment">// 动态规划</span><br>        <span class="hljs-comment">// 初始状态: l=r 时 dp[l][r]=true</span><br>        <span class="hljs-comment">// 状态转移方程: dp[l][r]=true &amp;&amp; dp[l+1][r-1]=true</span><br><br>        <span class="hljs-comment">// base case</span><br>        <span class="hljs-keyword">if</span>(s == <span class="hljs-keyword">null</span> || s.length() &lt; <span class="hljs-number">2</span>) <span class="hljs-keyword">return</span> s;<br><br>        <span class="hljs-keyword">int</span> strLen = s.length();<br>        <span class="hljs-keyword">int</span> start = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> end = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> maxLen = <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">boolean</span>[][] dp = <span class="hljs-keyword">new</span> <span class="hljs-keyword">boolean</span>[strLen][strLen];<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> right = <span class="hljs-number">1</span>; right &lt; strLen; right++) &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> left = <span class="hljs-number">0</span>; left &lt; right; left++) &#123;<br>                <span class="hljs-comment">// 最小情况：right - left &lt;= 2 相邻的2或3个字符组成的回文 bb或bab 考虑了奇偶</span><br>                <span class="hljs-comment">// 避免越界：dp[left + 1][right - 1]</span><br>                <span class="hljs-keyword">if</span>(s.charAt(left) == s.charAt(right) &amp;&amp; (right - left &lt;= <span class="hljs-number">2</span> || dp[left + <span class="hljs-number">1</span>][right - <span class="hljs-number">1</span>])) &#123;<br>                    dp[left][right] = <span class="hljs-keyword">true</span>;<br>                    <span class="hljs-comment">// 更新结果 向两边延展</span><br>                    <span class="hljs-keyword">if</span>((right - left + <span class="hljs-number">1</span>) &gt; maxLen) &#123;<br>                        maxLen = right - left + <span class="hljs-number">1</span>;<br>                        start = left;<br>                        end = right;<br>                    &#125;     <br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> s.substring(start, end + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>时间复杂度：O(n^2)， n 是字符串的长度。</p><p>空间复杂度：O(n^2)，存储动态规划状态（在双重for循环内部）。</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode TOP 145：4 median-of-two-sorted-arrays</title>
    <link href="/2021/07/24/4%20median-of-two-sorted-arrays/"/>
    <url>/2021/07/24/4%20median-of-two-sorted-arrays/</url>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">4. 寻找两个正序数组的中位数 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>时间复杂度要求O(log(m+n))，只能考虑二分搜索</p><ul><li>题目是求中位数，其实就是求第 <code>k</code> 小数的一种特殊情况</li><li>我们可以每次循环排除掉 <code>k/2</code> 个数</li><li>递归出口就是当 <code>k=1</code> 或者其中一个数组长度是 <code>0</code> 了</li><li>每进行一次循环，我们就减少 <code>k/2</code> 个元素，所以时间复杂度是 <code>O(log(k))</code>，而 <code>k=(m+n)/2</code>，所以最终的复杂度是<code>O(log(m+n))</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">findMedianSortedArrays</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums1, <span class="hljs-keyword">int</span>[] nums2)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n = nums1.length;<br>    <span class="hljs-keyword">int</span> m = nums2.length;<br>    <span class="hljs-comment">// 简化代码 不分奇偶讨论</span><br>    <span class="hljs-keyword">int</span> left = (n + m + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">int</span> right = (n + m + <span class="hljs-number">2</span>) / <span class="hljs-number">2</span>;<br>    <span class="hljs-comment">// 将偶数和奇数的情况合并 如果是奇数 会求两次同样的 k（最后除以2即为最后的中位数）</span><br>    <span class="hljs-keyword">return</span> (getKth(nums1, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>, nums2, <span class="hljs-number">0</span>, m - <span class="hljs-number">1</span>, left) + getKth(nums1, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>, nums2, <span class="hljs-number">0</span>, m - <span class="hljs-number">1</span>, right)) * <span class="hljs-number">0.5</span>;  <span class="hljs-comment">// * 0.5保证double</span><br>&#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getKth</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums1, <span class="hljs-keyword">int</span> start1, <span class="hljs-keyword">int</span> end1, <span class="hljs-keyword">int</span>[] nums2, <span class="hljs-keyword">int</span> start2, <span class="hljs-keyword">int</span> end2, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-comment">// 长度比下标多1</span><br>        <span class="hljs-keyword">int</span> len1 = end1 - start1 + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">int</span> len2 = end2 - start2 + <span class="hljs-number">1</span>;<br>        <span class="hljs-comment">// 让len1的长度小于len2 保证如果有数组空了 一定是len1 </span><br>        <span class="hljs-keyword">if</span> (len1 &gt; len2) <span class="hljs-keyword">return</span> getKth(nums2, start2, end2, nums1, start1, end1, k);<br>        <span class="hljs-comment">// 如果一个数组中空了 返回另一个数组第k个数 </span><br>        <span class="hljs-keyword">if</span> (len1 == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> nums2[start2 + k - <span class="hljs-number">1</span>]; <span class="hljs-comment">// 下标记得-1</span><br><br>        <span class="hljs-comment">// 第一(k==1)个数是中位数 谁的值小 中位数就是谁</span><br>        <span class="hljs-keyword">if</span> (k == <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> Math.min(nums1[start1], nums2[start2]);<br><br>        <span class="hljs-comment">// 防止数组下标越界（数组长度小于k/2） 每次都会从当前数组所生长度和k/2作比较 取小的</span><br>        <span class="hljs-comment">// 如果数组长度小于k/2 则下一次遍历会到末尾 后续在剩余的数组中寻找中位数</span><br>        <span class="hljs-keyword">int</span> i = start1 + Math.min(len1, k / <span class="hljs-number">2</span>) - <span class="hljs-number">1</span>; <span class="hljs-comment">// 下标记得-1</span><br>        <span class="hljs-keyword">int</span> j = start2 + Math.min(len2, k / <span class="hljs-number">2</span>) - <span class="hljs-number">1</span>; <span class="hljs-comment">// 下标记得-1</span><br><br>        <span class="hljs-keyword">if</span> (nums1[i] &gt; nums2[j]) &#123;<br>            <span class="hljs-comment">// nums2从j + 1开始 前k/2-1个值丢弃 更新k值</span><br>            <span class="hljs-keyword">return</span> getKth(nums1, start1, end1, nums2, j + <span class="hljs-number">1</span>, end2, k - (j - start2 + <span class="hljs-number">1</span>));<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// nums2从i + 1开始 前k/2-1个值丢弃 更新k值</span><br>            <span class="hljs-keyword">return</span> getKth(nums1, i + <span class="hljs-number">1</span>, end1, nums2, start2, end2, k - (i - start1 + <span class="hljs-number">1</span>));<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>时间复杂度：O(log(m+n))</p><p>空间复杂度：尾递归，O(1)</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode TOP 145：3 longest-substring-without-repeating-characters</title>
    <link href="/2021/07/22/3%20longest-substring-without-repeating-characters/"/>
    <url>/2021/07/22/3%20longest-substring-without-repeating-characters/</url>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">lengthOfLongestSubstring</span><span class="hljs-params">(String s)</span> </span>&#123;<br>        <span class="hljs-comment">// 滑动窗口</span><br>        Map&lt;Character, Integer&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>        <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; s.length(); i++) &#123;<br>            <span class="hljs-comment">// map中存过该值</span><br>            <span class="hljs-keyword">if</span>(map.containsKey(s.charAt(i))) &#123;<br>                <span class="hljs-comment">// 左指针右滑</span><br>                left = Math.max(left, map.get(s.charAt(i)) + <span class="hljs-number">1</span>);                <br>            &#125;<br>            <span class="hljs-comment">// 未存过</span><br>            map.put(s.charAt(i), i);<br>            <span class="hljs-comment">// 更新结果</span><br>            res = Math.max(res, i - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>时间复杂度：O(N)，N 是字符串的长度。</p><p>空间复杂度：<em>O</em>(∣Σ∣)，最大可存ASCII 码在 [0, 128)内的字符，即 ∣Σ∣ = 128。</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode TOP 145：2 add-two-numbers</title>
    <link href="/2021/07/17/2%20add-two-numbers/"/>
    <url>/2021/07/17/2%20add-two-numbers/</url>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/add-two-numbers/">2. 两数相加 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Definition for singly-linked list.</span><br><span class="hljs-comment"> * public class ListNode &#123;</span><br><span class="hljs-comment"> *     int val;</span><br><span class="hljs-comment"> *     ListNode next;</span><br><span class="hljs-comment"> *     ListNode() &#123;&#125;</span><br><span class="hljs-comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span><br><span class="hljs-comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> ListNode <span class="hljs-title">addTwoNumbers</span><span class="hljs-params">(ListNode l1, ListNode l2)</span> </span>&#123;<br>        ListNode head = <span class="hljs-keyword">null</span>, tail = <span class="hljs-keyword">null</span>; <span class="hljs-comment">// tail相当于游标</span><br>        <span class="hljs-keyword">int</span> carry = <span class="hljs-number">0</span>; <span class="hljs-comment">// 初始进位位</span><br>        <span class="hljs-keyword">while</span>(l1 != <span class="hljs-keyword">null</span> || l2 != <span class="hljs-keyword">null</span>) &#123;<br>            <span class="hljs-keyword">int</span> n1 = l1 != <span class="hljs-keyword">null</span> ? l1.val : <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">int</span> n2 = l2 != <span class="hljs-keyword">null</span> ? l2.val : <span class="hljs-number">0</span>;<br>            <span class="hljs-comment">// 对应位置相加 别忘了进位</span><br>            <span class="hljs-keyword">int</span> sum = n1 + n2 + carry;<br>            carry = sum / <span class="hljs-number">10</span>;<br><br>            <span class="hljs-keyword">if</span>(head == <span class="hljs-keyword">null</span>) &#123; <span class="hljs-comment">// 头节点</span><br>                head = tail = <span class="hljs-keyword">new</span> ListNode(sum % <span class="hljs-number">10</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                tail.next = <span class="hljs-keyword">new</span> ListNode(sum % <span class="hljs-number">10</span>); <span class="hljs-comment">// 结果链表向后延伸</span><br>                tail = tail.next; <span class="hljs-comment">// 游标向后移动</span><br>            &#125;                <br><br>            <span class="hljs-comment">// 输入链表向后移动</span><br>            <span class="hljs-keyword">if</span>(l1 != <span class="hljs-keyword">null</span>) l1 = l1.next; <br>            <span class="hljs-keyword">if</span>(l2 != <span class="hljs-keyword">null</span>) l2 = l2.next;<br>        &#125;<br><br>        <span class="hljs-comment">// l1 l2均为空 相加完毕</span><br>        <span class="hljs-keyword">if</span>(carry &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">// 最后的进位落下</span><br>            tail.next = <span class="hljs-keyword">new</span> ListNode(carry);<br><br>        <span class="hljs-keyword">return</span> head; <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>时间复杂度：O(max(m,n))（线性增长），m 和 n 分别为两个链表的长度。</p><p>空间复杂度：O(1)，每次使用一个节点的空间，注意返回值不计入空间复杂度。</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode TOP 145：1 two-sum</title>
    <link href="/2021/07/17/1%20two-sum/"/>
    <url>/2021/07/17/1%20two-sum/</url>
    
    <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="https://leetcode-cn.com/problems/two-sum/">1. 两数之和 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] twoSum(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> target) &#123;<br>        <span class="hljs-comment">// 有下标有元素值 想到哈希表</span><br>        Map&lt;Integer, Integer&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>        map.put(nums[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>); <span class="hljs-comment">// 放入数组第一个值 及其下标</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; nums.length; i++) &#123;<br>            <span class="hljs-keyword">int</span> res = target - nums[i]; <span class="hljs-comment">// target减去当前数组的值所得的数 若存在于map中 则构成一组结果</span><br>            <span class="hljs-keyword">if</span>(map.containsKey(res)) <br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[] &#123;i, map.get(res)&#125;; <span class="hljs-comment">// 返回一组下标</span><br>            <span class="hljs-keyword">else</span>  <br>                map.put(nums[i], i); <span class="hljs-comment">// 未存储过 存入   </span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>; <span class="hljs-comment">// 没有符合条件的结果</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>时间复杂度：O(N)，N 是数组中的元素数量。</p><p>空间复杂度：O(N)，N 是数组中的元素数量，主要为哈希表的开销。</p>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>解决：gitee添加SSH公钥 指纹生成失败</title>
    <link href="/2021/07/16/gitee%E6%8C%87%E7%BA%B9%E7%94%9F%E6%88%90%E5%A4%B1%E8%B4%A5/"/>
    <url>/2021/07/16/gitee%E6%8C%87%E7%BA%B9%E7%94%9F%E6%88%90%E5%A4%B1%E8%B4%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>已生成id_rsa.pub文件，且github配置ssh公钥成功</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>gitee添加ssh公钥，输完密码后弹出：指纹生成失败</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210716141949630.png"></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>我去看了.ssh文件夹</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210716142048988.png"></p><p>发现known_hosts里面已经有了gitee.com</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210716142113728.png"></p><p>于是我把它删除了，然后再次添加，显示成功</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210716142218033.png"></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>解决：启动CentOS7图形界面报错</title>
    <link href="/2021/07/14/%E5%90%AF%E5%8A%A8CentOS7%20A%20problem%20has%20occurred%20and%20the%20system%20can&#39;t%20recover%20Please%20contact%20a%20system%20administrator/"/>
    <url>/2021/07/14/%E5%90%AF%E5%8A%A8CentOS7%20A%20problem%20has%20occurred%20and%20the%20system%20can&#39;t%20recover%20Please%20contact%20a%20system%20administrator/</url>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Windows 10 家庭中文版</p><p>VMware-workstation-full-15.0.2-10952284.exe</p><p>CentOS-7-x86_64-DVD-1503-01</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>安装完后出现如下画面：</p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210707135940197.png"></p><h3 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h3><h4 id="1-上网搜索，据说是图形界面崩溃，需要执行如下操作："><a href="#1-上网搜索，据说是图形界面崩溃，需要执行如下操作：" class="headerlink" title="1. 上网搜索，据说是图形界面崩溃，需要执行如下操作："></a>1. 上网搜索，据说是图形界面崩溃，需要执行如下操作：</h4><h5 id="1-1-ctrl-alt-f2进入命令行"><a href="#1-1-ctrl-alt-f2进入命令行" class="headerlink" title="1.1 ctrl + alt + f2进入命令行"></a>1.1 <code>ctrl + alt + f2</code>进入命令行</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum history package-list gjs<br>sudo yum history package-list gnome-shell<br>sudo yum update --skip-broken<br></code></pre></td></tr></table></figure><h5 id="1-2-执行第三句后报错：Cannot-find-a-valid-baseurl-for-repo-base-7-x86-64"><a href="#1-2-执行第三句后报错：Cannot-find-a-valid-baseurl-for-repo-base-7-x86-64" class="headerlink" title="1.2 执行第三句后报错：Cannot find a valid baseurl for repo: base/7/x86_64"></a>1.2 执行第三句后报错：Cannot find a valid baseurl for repo: base/7/x86_64</h5><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210707154454894.png"></p><h6 id="1-2-1-修改配置文件ifcfg-eno16777736"><a href="#1-2-1-修改配置文件ifcfg-eno16777736" class="headerlink" title="1.2.1 修改配置文件ifcfg-eno16777736"></a>1.2.1 修改配置文件<code>ifcfg-eno16777736</code></h6><p>进入<code>/etc/sysconfig/network-scripts</code>目录，查找<code>ifcfg</code>开头的文件，将配置<code>ONBOOT=no</code>，改为<code>ONBOOT=yes</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/sysconfig/network-scripts<br>ls<br><span class="hljs-meta">#</span><span class="bash"> 我的centos7 有ifcfg-eno16777736  ifcfg-lo两个文件 修改ifcfg-eno16777736文件中的配置即可</span><br>vi ifcfg-eno16777736<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210707140945428.png"></p><h6 id="1-2-2-重启网络"><a href="#1-2-2-重启网络" class="headerlink" title="1.2.2 重启网络"></a>1.2.2 重启网络</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service network restart<br></code></pre></td></tr></table></figure><h5 id="1-3-重新执行第三句"><a href="#1-3-重新执行第三句" class="headerlink" title="1.3 重新执行第三句"></a>1.3 重新执行第三句</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum update --skip-broken<br></code></pre></td></tr></table></figure><p>进入漫长的下载过程，期间会有询问，都输入 <code>y</code></p><h4 id="2-重启CentOS7"><a href="#2-重启CentOS7" class="headerlink" title="2. 重启CentOS7"></a>2. 重启CentOS7</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo shutdown -r now<br></code></pre></td></tr></table></figure><h4 id="3-问题解决"><a href="#3-问题解决" class="headerlink" title="3. 问题解决"></a>3. 问题解决</h4><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210707160449424.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>解决：16GRAM + Windows10家庭版启动CentOS7蓝屏</title>
    <link href="/2021/07/14/16GRAM%20+%20Windows10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%90%AF%E5%8A%A8CentOS7%E8%93%9D%E5%B1%8F/"/>
    <url>/2021/07/14/16GRAM%20+%20Windows10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%90%AF%E5%8A%A8CentOS7%E8%93%9D%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>16GRAM是想说，肯定不是内存不够的问题。</p><p>Windows10家庭版是想说，一些解决方法里提到的关闭Hyper-V、关闭Device/Credenti，家庭版没有这两个选项。</p><h3 id="我的解决方法"><a href="#我的解决方法" class="headerlink" title="我的解决方法"></a>我的解决方法</h3><h4 id="1-启动虚拟机平台"><a href="#1-启动虚拟机平台" class="headerlink" title="1. 启动虚拟机平台"></a>1. 启动虚拟机平台</h4><h5 id="1-1-启用或关闭Windows功能"><a href="#1-1-启用或关闭Windows功能" class="headerlink" title="1.1 启用或关闭Windows功能"></a>1.1 启用或关闭Windows功能</h5><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210708151151898.png"></p><h5 id="1-2-启动虚拟机平台"><a href="#1-2-启动虚拟机平台" class="headerlink" title="1.2 启动虚拟机平台"></a>1.2 启动虚拟机平台</h5><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210708151510674.png"></p><h5 id="1-3-重启电脑即可进入"><a href="#1-3-重启电脑即可进入" class="headerlink" title="1.3 重启电脑即可进入"></a>1.3 重启电脑即可进入</h5><h4 id="2-新蓝屏bug：在该系统上全局禁用了虚拟机打印功能，不会为该虚拟机启用此功能"><a href="#2-新蓝屏bug：在该系统上全局禁用了虚拟机打印功能，不会为该虚拟机启用此功能" class="headerlink" title="2. 新蓝屏bug：在该系统上全局禁用了虚拟机打印功能，不会为该虚拟机启用此功能"></a>2. 新蓝屏bug：在该系统上全局禁用了虚拟机打印功能，不会为该虚拟机启用此功能</h4><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210708152322820.png"></p><h5 id="2-1-开启打印功能"><a href="#2-1-开启打印功能" class="headerlink" title="2.1 开启打印功能"></a>2.1 开启打印功能</h5><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210708152100783.png"></p><p><img src="https://gitee.com/robin_p_liu/images_for_blog/raw/master/img/image-20210708152223001.png"></p><h5 id="2-2-重启虚拟机即可进入"><a href="#2-2-重启虚拟机即可进入" class="headerlink" title="2.2 重启虚拟机即可进入"></a>2.2 重启虚拟机即可进入</h5>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/11/hello-world/"/>
    <url>/2021/07/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
